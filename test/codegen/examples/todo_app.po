# streams #
&todo [[Byte]]
&update {Atom [Byte]}
&append [Byte]
&done [Byte]

# pipes #
| update [ &update 100 &todo 1 ] &todo
| append [ &append 50 ] &update
| done [ &done 50 ] &update

# pure functions #
update -> {Atom [Byte]} -> [[Byte]] [[Byte]]
update tup todos =
  ? == Append @1 tup
    +> @2 tup todos
  ? == Done @1 tup
    (remove @2 tup todos)
  todos

append -> [Byte] {Atom [Byte]}
append todo = { Append todo }

done -> [Byte] {Atom [Byte]}
done done = { Done done }

push -> [a] -> a -> [a] [a]
push ys x xs =
  +> x (concat xs ys)

concat -> [a] -> [a] [a]
concat xs ys =
  <+ xs ys (push ys)

_filter -> -> x Atom -> x -> [x] [x]
_filter f x xs =
  (concat
    ? (f x)
      x:[x]
      x:[]
    (filter f xs))

filter -> -> j Atom -> [j] [j]
filter f xs =
  <+ xs xs (_filter f)

neq -> a -> b Atom
neq a b = == False == a b

remove -> [Byte] -> [[Byte]] [[Byte]]
remove todo todos = (filter (neq todo) todos)
