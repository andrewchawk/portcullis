# UTILS #
filter -> -> [a] Atom -> [a] [a]
filter f xs =
  ? == 0 _ xs xs
  ? (f xs) ++ !! xs 0 1 (filter f (tail xs))
    (filter f (tail xs))

tail -> [a] [a]
tail xs = !! xs 1 _ xs

lt -> Num -> [Num] Atom
lt p xs = < ! xs 0 0 p

eq -> Num -> [Num] Atom
eq p xs = == ! xs 0 0 p

gt -> Num -> [Num] Atom
gt p xs = > ! xs 0 0 p

# QUICK SORT #
qsort -> [Num] [Num]
qsort xs =
  ? >= 1 _ xs xs
    (qsortP ! xs 0 0 xs)

qsortP -> Num -> [Num] [Num]
qsortP pivot xs =
  ++ (qsort (filter (lt pivot) xs))
  ++ (filter (eq pivot) xs) (qsort (filter (gt pivot) xs))

# BAD #
hofBad -> -> a Atom -> [a] [a]
hofBad f xs =
  ? (f xs) xs
    xs
#
hofGood -> -> a Atom -> [a] [a]
hofGood f xs = (f xs)
#
