

-- Notes:
-- no Var (variables): instead you have functions with zero parameters
-- no Extern (external): we're just not gonna let you call external functions :/
-- TODO steal from this: https://blog.sumtypeofway.com/posts/introduction-to-recursion-schemes.html


--pipeToExpr :: Map Name Stream -> Pipe -> Expr
--pipeToExpr streamMap Pipe { funcName, inStreamNames, outStreamName } =
  --Val $ Tuple (strToExpr funcName) (Val $ Tuple streamExprs (strToExpr outStreamName))
    --where
      --strToExpr :: String -> Expr
      --strToExpr str = Val (List CharType (Val . Character <$> str))
      --streamExprs = Val $ List CharType (inStreamNames <&> \name -> Val $ Tuple (strToExpr name) (Val $ Number (fromIntegral (buffer (streamMap ! name)))))

